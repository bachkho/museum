app.factory('AuthService', ['$http','$route', 'cfpLoadingBar', function($http, $route, cfpLoadingBar){
	
	return ({
		// hostAnimal : 'http://localhost:8000/content/dong-vat/auto',
		hostName: 'http://localhost:8000',
		deleteP: deleteP,
		addSample: addSample,
		editForm: editForm,
		exportFile: exportFile,
		arrAuto: [	'tenDongNghia','gioi',
					'nganh', 'lop', 
					'phanLop', 
					'bo', 
					'phanBo', 
					'lienHo',
					'ho',
					'phanHo',
					'toc', 
					'giong', 
					'loai', 
					'duoiLoai', 
					'coQuanThuMau', 
					'quocGia', 'tinh', 
					'huyen', 'xa', 'thon', 
					'coQuanToChucPhanTich', 
					'coQuanXuLy'
					,'boPhanLayMauDNA', 
					'trangThaiGiuMauDNA',
					'coQuanNhapVatMau']
	});

	function exportFile(id){
		var arr = document.getElementsByClassName("check-box");
		var urls = [];
		var totalFile = 0;
		var step = 0;
		var progressBar = document.getElementById('download-progress-bar');
		var progressBarContainer = document.getElementById('download-progress-bar-container');
		angular.forEach(arr, function (value) {
			
			if (value.checked) {
				urls.push(value.getAttribute("data-id") + id);
				totalFile++;
			}
		});

		if (totalFile){
			// step = 100 / totalFile;
			progressBar.setAttribute('aria-valuemax', totalFile);
			progressBar.style.width = '0%';
			progressBar.innerHTML = '0 / ' + totalFile;
			progressBar.setAttribute('aria-valuenow', 0);
			$(progressBarContainer).fadeIn();
		}

		download(0);

		function download(index) {
			console.log('processing ' + index);
			if (index >= totalFile){
				// progressBar.setAttribute('aria-valuemax', totalFile);
				// progressBar.style.width = '0%';
				// progressBar.innerHTML = '0 / ' + totalFile;
				// progressBar.setAttribute('aria-valuenow', 0);
				// $(progressBarContainer).fadeIn();
				$(progressBarContainer).fadeOut(1000);
			}
			else {
				var xhr = new XMLHttpRequest();
				xhr.onreadystatechange = function () {
					if ((xhr.readyState == 4) && (xhr.status == 200)){
						console.log(xhr);
						var disposition = xhr.getResponseHeader('Content-Disposition');
						var fields = disposition.split([';']);
						var fileNameIndex = -1;
						fields.map(function (element, index) {
							fields[index] = element.trim();
							if (fields[index].indexOf('filename*') >= 0){
								fileNameIndex = index;
							}
						})
						var fileName = '';
						if (fileNameIndex == -1){
							for(var i = 0; i < fields.length; i++){
								if (fields[i].indexOf('filename=') >= 0){
									fileNameIndex = i;
								}
							}
						}
						if (fileNameIndex == -1){
							fileName = 'PCSDL.' + id;
						}
						else {
							fileName = fields[fileNameIndex].substring(fields[fileNameIndex].indexOf('PCSDL'));
							fileName = decodeURIComponent(fileName);
						}
						console.log(fields);
						var type = xhr.getResponseHeader('Content-Type');
						console.log(type);
						// var blob = new Blob([xhr.response], {type: 'application/x-binary; charset=utf-8'});
						var blob = new Blob([xhr.response], {type: type});
						saveAs(blob, fileName);
						progressBar.style.width = (index + 1) / totalFile * 100 + '%';
						progressBar.innerHTML = (index + 1) + ' / ' + totalFile;
						progressBar.setAttribute('aria-valuenow', index);
						if (index >= totalFile - 1){
							setTimeout(function () {
								$(progressBarContainer).fadeOut(1000);
							}, 500)

						}
						setTimeout(function () {
							download(index + 1);
						}, 100);
					}
				}
				xhr.responseType = 'arraybuffer';
				xhr.open('GET', urls[index], true);
				xhr.send();
			}
		}

		// function createCB(index) {
		// 	return function () {
		// 		window.location.href = urls[index];
		// 		progressBar.style.width = (index + 1) / totalFile * 100 + '%';
		// 		progressBar.innerHTML = (index + 1) + ' / ' + totalFile;
		// 		progressBar.setAttribute('aria-valuenow', index);
		// 		if (index >= totalFile - 1){
		// 			$(progressBarContainer).fadeOut(2000);

		// 		}
		// 	}
		// }
		// var timeOut = 2000;
		// if (id == 'pdf'){
		// 	timeOut = 4000;
		// }
		// if (totalFile){
		// 	// step = 100 / totalFile;
		// 	progressBar.setAttribute('aria-valuemax', totalFile);
		// 	progressBar.style.width = '0%';
		// 	progressBar.innerHTML = '0 / ' + totalFile;
		// 	progressBar.setAttribute('aria-valuenow', 0);
		// 	$(progressBarContainer).fadeIn();
		// }
		// for(var i = 0; i < urls.length; i++){
		// 	setTimeout(createCB(i), timeOut * i)
		// }
	}

	function addSample(fd, url, urlRe){
		$.ajax({
				url: url,
				method: 'POST',
				contentType: false,
				processData: false,
				data: fd,
				success: function (data) {
					cfpLoadingBar.complete();
					alert(data.status);
					window.location = urlRe;
				},
				error: function (err) {
					cfpLoadingBar.complete();
					cfpLoadingBar.set(0);
					console.log(err);
					alert(JSON.parse(err.responseText).error);
					var element = document.getElementsByName(JSON.parse(err.responseText).field)[0];
					try {
						element.style.background = '#EE543A';
						setTimeout((function (e) {
							return function () {
								e.style.background = 'white';
							}
						})(element), 2000);
						$('html, body').animate({
							scrollTop: $(element).offset().top - 100
						}, 500);
					}
					catch (e){
						// do not care
					}
				}
			});
	}

	function editForm(fd, url, urlRe){
			$.ajax({
			url: url,
			method: 'PUT',
			contentType: false,
			processData: false,
			data: fd,
			success: function (data) {
				cfpLoadingBar.complete();
				alert(data.status);
				window.location = urlRe;
			},
			error: function (err) {
				cfpLoadingBar.complete();
				cfpLoadingBar.set(0);
				console.log(err);
				alert(JSON.parse(err.responseText).error);
				var element = document.getElementsByName(JSON.parse(err.responseText).field)[0];
				try {
					element.style.background = '#EE543A';
					setTimeout((function (e) {
						return function () {
							e.style.background = 'white';
						}
					})(element), 2000);
					$('html, body').animate({
						scrollTop: $(element).offset().top - 100
					}, 500);
				}
				catch (e){
					// do not care
				}
			}
		});
	}
	function deleteP(id, urlDelete){
		$http({
			method: 'DELETE',
			url: urlDelete,
			headers: {'Content-Type': 'application/json'},
			data: {id: id}
		}).then(function (res) {
			$route.reload();
		}, function (err) {
			console.log(err);
		});
	}
}]);

//Autocomplete
// app.directive('autoComplete', function($timeout) {
//     return function(scope, iElement, iAttrs) {
//         iElement.autocomplete({
//             source: scope[iAttrs.uiItems],
//             select: function() {
//                 $timeout(function() {
//                   iElement.trigger('input');
//                 }, 0);
//             }
//         });
//     };
// });